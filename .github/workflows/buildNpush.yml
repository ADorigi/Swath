# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: buildNpush

on:
  push:
    tags:        
        - 'v*'

jobs:

  build:
    runs-on: ubuntu-latest
    permissions:
        contents: 'read'
        id-token: 'write'
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21.2'

    - name: Test
      run: go test -v ./...
    
    - id: 'authGCP'
      uses: 'google-github-actions/auth@v1'
      with:
        # token_format: access_token
        # create_credentials_file: true
        workload_identity_provider: 'projects/797097160987/locations/global/workloadIdentityPools/swath-gh-idenity-pool/providers/swath-pool-provider-id'
        service_account: 'swath-service-account@agile-tangent-401105.iam.gserviceaccount.com'
        # access_token_lifetime: 300s
        
    # gcloud authenticate for docker
    - name: glcloudDocker
      run: gcloud auth configure-docker northamerica-northeast2-docker.pkg.dev/agile-tangent-401105/container-registry

    # verify docker version
    - name: Docker Version
      run: docker version

    # create image with docker build
    - name: Create image
      run: docker build -t swath-test .

    # check created image in docker local registry
    - name: Check image
      run: docker images

    # authenticate docker with artifact registry
    - name: Docker login
      uses: docker/login-action@v1
      with:
        registry: us-west2-docker.pkg.dev
        username: oauth2accesstoken
        password: ${{ steps.authGCP.outputs.access_token }}
    
    # tag the image
    # push to registry
    # create kube config